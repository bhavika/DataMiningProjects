[mean: 0.04750, std: 0.06734, params: {'penalty': 'l2', 'alpha': 0.001, 'n_iter': 2500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.39358, std: 0.09060, params: {'penalty': 'elasticnet', 'alpha': 0.001, 'n_iter': 2500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.04750, std: 0.06734, params: {'penalty': 'l2', 'alpha': 0.001, 'n_iter': 3000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.42135, std: 0.03274, params: {'penalty': 'elasticnet', 'alpha': 0.001, 'n_iter': 3000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.04750, std: 0.06734, params: {'penalty': 'l2', 'alpha': 0.001, 'n_iter': 3500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.45314, std: 0.01232, params: {'penalty': 'elasticnet', 'alpha': 0.001, 'n_iter': 3500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.04750, std: 0.06734, params: {'penalty': 'l2', 'alpha': 0.001, 'n_iter': 4000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.45314, std: 0.01232, params: {'penalty': 'elasticnet', 'alpha': 0.001, 'n_iter': 4000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.33898, std: 0.05107, params: {'penalty': 'l2', 'alpha': 0.001, 'n_iter': 2500, 'shuffle': True, 'loss': 'log'}, mean: 0.55700, std: 0.04206, params: {'penalty': 'elasticnet', 'alpha': 0.001, 'n_iter': 2500, 'shuffle': True, 'loss': 'log'}, mean: 0.33898, std: 0.05107, params: {'penalty': 'l2', 'alpha': 0.001, 'n_iter': 3000, 'shuffle': True, 'loss': 'log'}, mean: 0.55700, std: 0.04206, params: {'penalty': 'elasticnet', 'alpha': 0.001, 'n_iter': 3000, 'shuffle': True, 'loss': 'log'}, mean: 0.33898, std: 0.05107, params: {'penalty': 'l2', 'alpha': 0.001, 'n_iter': 3500, 'shuffle': True, 'loss': 'log'}, mean: 0.55700, std: 0.04206, params: {'penalty': 'elasticnet', 'alpha': 0.001, 'n_iter': 3500, 'shuffle': True, 'loss': 'log'}, mean: 0.37076, std: 0.08330, params: {'penalty': 'l2', 'alpha': 0.001, 'n_iter': 4000, 'shuffle': True, 'loss': 'log'}, mean: 0.55272, std: 0.10111, params: {'penalty': 'elasticnet', 'alpha': 0.001, 'n_iter': 4000, 'shuffle': True, 'loss': 'log'}, mean: 0.39093, std: 0.03899, params: {'penalty': 'l2', 'alpha': 0.01, 'n_iter': 2500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.58148, std: 0.05886, params: {'penalty': 'elasticnet', 'alpha': 0.01, 'n_iter': 2500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.42271, std: 0.05044, params: {'penalty': 'l2', 'alpha': 0.01, 'n_iter': 3000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.55503, std: 0.09565, params: {'penalty': 'elasticnet', 'alpha': 0.01, 'n_iter': 3000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.42271, std: 0.05044, params: {'penalty': 'l2', 'alpha': 0.01, 'n_iter': 3500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.55503, std: 0.09565, params: {'penalty': 'elasticnet', 'alpha': 0.01, 'n_iter': 3500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.42271, std: 0.05044, params: {'penalty': 'l2', 'alpha': 0.01, 'n_iter': 4000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.55503, std: 0.09565, params: {'penalty': 'elasticnet', 'alpha': 0.01, 'n_iter': 4000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.24580, std: 0.19269, params: {'penalty': 'l2', 'alpha': 0.01, 'n_iter': 2500, 'shuffle': True, 'loss': 'log'}, mean: 0.53055, std: 0.07849, params: {'penalty': 'elasticnet', 'alpha': 0.01, 'n_iter': 2500, 'shuffle': True, 'loss': 'log'}, mean: 0.21402, std: 0.15758, params: {'penalty': 'l2', 'alpha': 0.01, 'n_iter': 3000, 'shuffle': True, 'loss': 'log'}, mean: 0.55700, std: 0.04206, params: {'penalty': 'elasticnet', 'alpha': 0.01, 'n_iter': 3000, 'shuffle': True, 'loss': 'log'}, mean: 0.24580, std: 0.19269, params: {'penalty': 'l2', 'alpha': 0.01, 'n_iter': 3500, 'shuffle': True, 'loss': 'log'}, mean: 0.53055, std: 0.07849, params: {'penalty': 'elasticnet', 'alpha': 0.01, 'n_iter': 3500, 'shuffle': True, 'loss': 'log'}, mean: 0.24580, std: 0.19269, params: {'penalty': 'l2', 'alpha': 0.01, 'n_iter': 4000, 'shuffle': True, 'loss': 'log'}, mean: 0.53055, std: 0.07849, params: {'penalty': 'elasticnet', 'alpha': 0.01, 'n_iter': 4000, 'shuffle': True, 'loss': 'log'}, mean: 0.44858, std: 0.06184, params: {'penalty': 'l2', 'alpha': 0.02, 'n_iter': 2500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.55503, std: 0.09565, params: {'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 2500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.44858, std: 0.06184, params: {'penalty': 'l2', 'alpha': 0.02, 'n_iter': 3000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.60076, std: 0.07249, params: {'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 3000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.42135, std: 0.03274, params: {'penalty': 'l2', 'alpha': 0.02, 'n_iter': 3500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.55503, std: 0.09565, params: {'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 3500, 'shuffle': True, 'loss': 'hinge'}, mean: 0.48036, std: 0.03414, params: {'penalty': 'l2', 'alpha': 0.02, 'n_iter': 4000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.54584, std: 0.08846, params: {'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 4000, 'shuffle': True, 'loss': 'hinge'}, mean: 0.13652, std: 0.10896, params: {'penalty': 'l2', 'alpha': 0.02, 'n_iter': 2500, 'shuffle': True, 'loss': 'log'}, mean: 0.53055, std: 0.07849, params: {'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 2500, 'shuffle': True, 'loss': 'log'}, mean: 0.13652, std: 0.10896, params: {'penalty': 'l2', 'alpha': 0.02, 'n_iter': 3000, 'shuffle': True, 'loss': 'log'}, mean: 0.54005, std: 0.08436, params: {'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 3000, 'shuffle': True, 'loss': 'log'}, mean: 0.13652, std: 0.10896, params: {'penalty': 'l2', 'alpha': 0.02, 'n_iter': 3500, 'shuffle': True, 'loss': 'log'}, mean: 0.54005, std: 0.08436, params: {'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 3500, 'shuffle': True, 'loss': 'log'}, mean: 0.13652, std: 0.10896, params: {'penalty': 'l2', 'alpha': 0.02, 'n_iter': 4000, 'shuffle': True, 'loss': 'log'}, mean: 0.56105, std: 0.09924, params: {'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 4000, 'shuffle': True, 'loss': 'log'}]
Best estimator----
SGDClassifier(alpha=0.02, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', n_iter=3000, n_jobs=1,
       penalty='elasticnet', power_t=0.5, random_state=None, shuffle=True,
       verbose=0, warm_start=False)
Best params ----
{'penalty': 'elasticnet', 'alpha': 0.02, 'n_iter': 3000, 'shuffle': True, 'loss': 'hinge'}
Best score:  0.600757575758
Finished in:  699.411329985
